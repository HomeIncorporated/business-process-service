# Example OpenAPI spec using YAML
# Be aware that YAML has indentation based scoping.
# https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md
# Generate client & server code stubs using http://editor.swagger.io/#/
swagger: '2.0'

# This is your document metadata
info:
  version: "0.0.1"
  title: Business Process API

# Describe your paths here
paths:
  # This is the version path endpoint.
  /version:
    # This is a HTTP operation (GET)
    get:
      # Describe this verb here. Note: you can use markdown
      summary: get the name and version string
      produces:
      - application/json
      responses:
        # Response code
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Version'
  /content:
    get:
      operationId: getProcessDefinitions
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
      responses:
        # Response code
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Process'
    post:
      operationId: addProcessDefinition
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Process'
      responses:
        # Response code
        200:
          description: BP added
          schema:
            $ref: '#/definitions/ApiResponse'
    put:
      operationId: updateProcessDefinition
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/Process'
      responses:
        # Response code
        200:
          description: BP updated
          schema:
            $ref: '#/definitions/ApiResponse'
  /content/{processID}:
    get:
      operationId: getProcessDefinition
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
      - in: path
        name: processID
        type: string
        description: The id of the business process.
        required: true
      responses:
        # Response code
        200:
          description: BP obtained
          schema:
            $ref: '#/definitions/Process'
    delete:
      operationId: deleteProcessDefinition
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
      - in: path
        name: processID
        type: string
        required: true
      responses:
        # Response code
        200:
          description: BP deleted
          schema:
            $ref: '#/definitions/ApiResponse'

  /preference:
    post:
      operationId: addProcessPartnerPreference
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ProcessPreferences'
      responses:
        # Response code
        200:
          description: Partner Preference added
          schema:
            $ref: '#/definitions/ApiResponse'
    put:
      operationId: updateProcessPartnerPreference
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/ProcessPreferences'
      responses:
        # Response code
        200:
          description: Partner Preference updated
          schema:
            $ref: '#/definitions/ApiResponse'
  /preference/{partnerID}:
    get:
      operationId: getProcessPartnerPreference
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
      - in: path
        name: partnerID
        type: string
        description: The id of the partner.
        required: true
      responses:
        # Response code
        200:
          description: Partner Preference obtained
          schema:
            $ref: '#/definitions/ProcessPreferences'
    delete:
      operationId: deleteProcessPartnerPreference
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
      - in: path
        name: partnerID
        type: string
        required: true
      responses:
        # Response code
        200:
          description: Partner Preference deleted
          schema:
            $ref: '#/definitions/ApiResponse'

  /application:
    post:
      operationId: addProcessConfiguration
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ProcessConfiguration'
      responses:
        # Response code
        200:
          description: Partner Preference added
          schema:
            $ref: '#/definitions/ApiResponse'
    put:
      operationId: updateProcessConfiguration
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
      - in: body
        name: body
        schema:
          $ref: '#/definitions/ProcessConfiguration'
      responses:
        # Response code
        200:
          description: Partner Preference updated
          schema:
            $ref: '#/definitions/ApiResponse'

  /application/{partnerID}:
    get:
      operationId: getProcessConfiguration
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
      - in: path
        name: partnerID
        type: string
        description: The id of the partner.
        required: true
      responses:
        # Response code
        200:
          description: Partner Preference obtained
          schema:
            type: array
            items:
              $ref: '#/definitions/ProcessConfiguration'
  /application/{partnerID}/{processID}/{roleType}:
    get:
      operationId: getProcessConfigurationByProcessID
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
      - in: path
        name: partnerID
        type: string
        description: The id of the partner.
        required: true
      - in: path
        name: processID
        type: string
        required: true
      - in: path
        name: roleType
        type: string
        required: true
      responses:
        # Response code
        200:
          description: Partner Preference obtained
          schema:
            $ref: '#/definitions/ProcessConfiguration'
    delete:
      operationId: deleteProcessConfiguration
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
      - in: path
        name: partnerID
        type: string
        required: true
      - in: path
        name: processID
        type: string
        required: true
      - in: path
        name: roleType
        type: string
        required: true
      responses:
        # Response code
        200:
          description: Partner Preference deleted
          schema:
            $ref: '#/definitions/ApiResponse'

  /start:
    post:
      operationId: startProcessInstance
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ProcessInstanceInputMessage'
      - in: query
        name: gid
        description: The UUID of the process instance group owned by the party initiating the process
        required: false
        type: string
      - in: query
        name: preceding_pid
        description: The id of the preceding process instance
        required: false
        type: string
      - in: query
        name: preceding_gid
        description: The UUID of the preceding process instance group
        required: false
        type: string
      - in: query
        name: collaborationGID
        description: The id of the collaboration group which the process instance group belongs to
        required: false
        type: string
      responses:
        # Response code
        200:
          description: Business Process Instance Started
          schema:
            $ref: '#/definitions/ProcessInstance'
  /start/billofmaterials:
    post:
      operationId: createNegotiationsForLineItems
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: bearerToken
        in: header
        type: string
        required: true
      - in: body
        name: lineItemsJson
        required: true
        schema:
          type: string
      - in: query
        name: useFrameContract
        description: If this parameter is true and a valid frame contract exists between parties, then an order is started for the product using the details of frame contract
        required: false
        default: false
        type: boolean
      responses:
        200:
          description: Created negotiations for line items for the given party
          schema:
            type: string
        401:
          description: Invalid token. No user was found for the provided token
          schema:
            type: string
        500:
          description: Unexpected error while creating negotiations for line items for the given party
          schema:
            type: string
  /continue:
    post:
      operationId: continueProcessInstance
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ProcessInstanceInputMessage'
      - in: query
        name: gid
        description: The UUID of the process instance group owned by the party continuing the process
        required: false
        type: string
      - in: query
        name: collaborationGID
        description: The id of the collaboration group which the process instance group belongs to
        required: false
        type: string
      - name: Authorization
        in: header
        type: string
        required: true
      responses:
        # Response code
        200:
          description: Business Process Instance Message sent successfully
          schema:
            $ref: '#/definitions/ProcessInstance'

#  /document:
#    post:
#      operationId: addDocumentMetadata
#      consumes:
#      - application/json
#      produces:
#      - application/json
#      parameters:
#      - name: Authorization
#        in: header
#        type: string
#        required: true
#      - in: body
#        name: body
#        required: true
#        schema:
#          $ref: '#/definitions/ProcessDocumentMetadata'
#      responses:
#        # Response code
#        200:
#          description: Document added
#          schema:
#            $ref: '#/definitions/ApiResponse'
#    put:
#      operationId: updateDocumentMetadata
#      consumes:
#      - application/json
#      produces:
#      - application/json
#      parameters:
#      - name: Authorization
#        in: header
#        type: string
#        required: true
#      - in: body
#        name: body
#        schema:
#          $ref: '#/definitions/ProcessDocumentMetadata'
#      responses:
#        # Response code
#        200:
#          description: Document updated
#          schema:
#            $ref: '#/definitions/ApiResponse'
#
#  /document/{documentID}:
#    delete:
#      operationId: deleteDocument
#      produces:
#      - application/json
#      parameters:
#      - name: Authorization
#        in: header
#        type: string
#        required: true
#      - in: path
#        name: documentID
#        type: string
#        required: true
#      responses:
#        # Response code
#        200:
#          description: Document deleted
#          schema:
#            $ref: '#/definitions/ApiResponse'
#
#  /document/{partnerID}/{type}/{source}/{status}:
#    get:
#      operationId: getDocuments
#      produces:
#      - application/json
#      parameters:
#      - name: Authorization
#        in: header
#        type: string
#        required: true
#      - in: path
#        name: partnerID
#        type: string
#        description: The id of the partner.
#        required: true
#      - in: path
#        name: type
#        type: string
#        description: The type of the document such as PPAPRESPONSE,ORDERRESPONSESIMPLE,REQUESTFORQUOTATION etc.
#        required: true
#      - in: path
#        name: status
#        type: string
#        description: The status of the document. (APPROVED, WAITINGRESPONSE, DENIED or PASTDUE)
#        required: true
#      - in: path
#        name: source
#        type: string
#        description: The source of the document (whether it is sent or received by the partner - SENT, RECEIVED).
#        required: true
#      responses:
#        # Response code
#        200:
#          description: Document obtained
#          schema:
#            type: array
#            items:
#              $ref: '#/definitions/ProcessDocumentMetadata'
#
#  /document/{partnerID}/{type}/{source}:
#    get:
#      operationId: getDocuments
#      produces:
#      - application/json
#      parameters:
#      - name: Authorization
#        in: header
#        type: string
#        required: true
#      - in: path
#        name: partnerID
#        type: string
#        description: The id of the partner.
#        required: true
#      - in: path
#        name: type
#        type: string
#        description: The type of the document such as PPAPRESPONSE,ORDERRESPONSESIMPLE,REQUESTFORQUOTATION etc.
#        required: true
#      - in: path
#        name: source
#        type: string
#        description: The source of the document (whether it is sent or received by the partner - SENT, RECEIVED).
#        required: true
#      responses:
#        # Response code
#        200:
#          description: Document obtained
#          schema:
#            type: array
#            items:
#              $ref: '#/definitions/ProcessDocumentMetadata'
#
#  /document/{partnerID}/{type}:
#    get:
#      operationId: getDocuments
#      produces:
#      - application/json
#      parameters:
#      - name: Authorization
#        in: header
#        type: string
#        required: true
#      - in: path
#        name: partnerID
#        type: string
#        description: The id of the partner.
#        required: true
#      - in: path
#        name: type
#        type: string
#        description: The type of the document such as PPAPRESPONSE,ORDERRESPONSESIMPLE,REQUESTFORQUOTATION etc.
#        required: true
#      responses:
#        # Response code
#        200:
#          description: Document obtained
#          schema:
#            type: array
#            items:
#              $ref: '#/definitions/ProcessDocumentMetadata'

  /collaboration-groups/{id}:
    patch:
      operationId: updateCollaborationGroupName
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
      - in: path
        name: id
        type: string
        required: true
      - in: query
        name: groupName
        type: string
        required: true
      responses:
        200:
          description: Updated the collaboration group name successfully
        401:
          description: Invalid token. No user was found for the provided token
        404:
          description: Specified CollaborationGroup does not exist
    delete:
      operationId: deleteCollaborationGroup
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
      - in: path
        name: id
        type: string
        required: true
      responses:
        200:
          description: Deleted the collaboration group successfully
        401:
          description: Invalid token. No user was found for the provided token
    get:
      operationId: getCollaborationGroup
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
      - in: path
        name: id
        type: string
        required: true
      responses:
        200:
          description: Retrieved the collaboration group successfully
          schema:
            $ref: '#/definitions/CollaborationGroup'
        401:
          description: Invalid token. No user was found for the provided token
        404:
          description: The specified CollaborationGroup does not exist
  /collaboration-groups/{id}/archive:
      post:
        operationId: archiveCollaborationGroup
        parameters:
        - name: Authorization
          in: header
          type: string
          required: true
        - in: path
          name: id
          type: string
          description: Identifier of the collaboration group to be archived
          required: true
        responses:
          200:
            description: Archived the collaboration group successfully
            schema:
              $ref: '#/definitions/CollaborationGroup'
          401:
            description: Invalid token. No user was found for the provided token
          404:
            description: The collaboration group does not exist for the given id
  /collaboration-groups/{id}/restore:
      post:
        operationId: restoreCollaborationGroup
        parameters:
        - name: Authorization
          in: header
          type: string
          required: true
        - in: path
          name: id
          type: string
          description: Identifier of the collaboration group to be restored
          required: true
        responses:
          200:
            description: Restored the collaboration group successfully
            schema:
              $ref: '#/definitions/CollaborationGroup'
          401:
            description: Invalid token. No user was found for the provided token
          404:
            description: The collaboration group does not exist for the given id
  /collaboration-groups/merge:
    get:
      operationId: mergeCollaborationGroups
      parameters:
        - name: Authorization
          in: header
          type: string
          required: true
        - in: query
          name: bcid
          type: string
          description: Identifier of the base collaboration group
          required: true
        - in: query
          name: cgids
          type: array
          description: List of collaboration group id's to be merged.
          required: true
      responses:
        200:
          description: Merged the collaboration group successfully
          schema:
            $ref: '#/definitions/CollaborationGroup'
        401:
          description: Invalid token. No user was found for the provided token
        400:
          description: Invalid Clause content
  /collaboration-groups/all-finished:
      get:
        operationId: checkAllCollaborationsFinished
        parameters:
          - name: Authorization
            in: header
            type: string
            required: true
          - in: query
            name: partyId
            type: string
            description: Identifier of the party whose collaborations are checked
            required: true
          - in: query
            name: collaborationRole
            type: string
            description: Role of the party in the collaboration. Possible values are SELLER and BUYER
            default: SELLER
            required: true
        responses:
          200:
            schema:
              type: string
          401:
            description: Invalid token. No user was found for the provided token
  /collaboration-groups:
    get:
      operationId: getCollaborationGroups
      parameters:
      - in: query
        name: partyId
        type: string
        description: Identifier of the party
      - in: query
        name: relatedProducts
        type: array
        description: Related products
      - in: query
        name: relatedProductCategories
        type: array
        description: Related product categories
      - in: query
        name: tradingPartnerIDs
        type: array
        description: Identifier of the corresponsing trading partner ID
      - in: query
        name: offset
        type: integer
        description: Offset of the first result among the complete result set satisfying the given criteria
        default: 0
      - in: query
        name: limit
        type: integer
        description: Number of results to be included in the result set
        default: 10
      - in: query
        name: archived
        type: boolean
        default: false
      - in: query
        name: status
        required: false
        type: array
        items:
          type: string
          enum:
          - STARTED
          - CANCELLED
          - COMPLETED
      - in: query
        name: collaborationRole
        type: string
        required: false
      - in: query
        name: isProject
        type: boolean
        default: false
      - name: Authorization
        in: header
        type: string
        required: true
      produces:
      - application/json
      responses:
        200:
          description: Retrieved the groups successfully
          schema:
            $ref: '#/definitions/CollaborationGroupResponse'

  /process-instance-groups/order-document:
    get:
      operationId: getOrderDocument
      parameters:
      - in: query
        name: processInstanceId
        type: string
        required: true
        description: Identifier of a process instance included in the group
      - name: Authorization
        in: header
        type: string
        required: true
      produces:
      - application/json
      responses:
        200:
          description: Retrieved the order document successfuly
        401:
          description: Invalid token. No user was found for the provided token
        404:
          description: No process instance or order exists
        500:
          description: Unexpected error while getting the order document

  /process-instance-groups/filters:
    get:
      operationId: getProcessInstanceGroupFilters
      parameters:
      - in: query
        name: partyId
        type: string
        description: Identifier of the party
      - in: query
        name: relatedProducts
        type: array
        description: Related products
      - in: query
        name: relatedProductCategories
        type: array
        description: Related product categories
      - in: query
        name: tradingPartnerIDs
        type: array
        description: Identifier of the corresponsing trading partner ID
      - in: query
        name: archived
        type: boolean
        default: false
      - in: query
        name: collaborationRole
        type: string
        required: false
      - in: query
        name: status
        required: false
        type: array
        items:
          type: string
          enum:
          - STARTED
          - CANCELLED
          - COMPLETED
      - name: Authorization
        in: header
        type: string
        required: true
      - in: query
        name: isProject
        type: boolean
        default: false
      produces:
      - application/json
      responses:
        200:
          description: Retrieved the ProcessInstanceGroupFilter successfully
          schema:
            $ref: '#/definitions/ProcessInstanceGroupFilter'

  /process-instance-groups/{id}:
    get:
      operationId: getProcessInstanceGroup
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
      - in: path
        name: id
        type: string
        required: true
      responses:
        200:
          description: Retrieved the ProcessInstanceGroup successfully
          schema:
            $ref: '#/definitions/ProcessInstanceGroup'
        401:
          description: Invalid token. No user was found for the provided token
    delete:
      operationId: deleteProcessInstanceGroup
      parameters:
      - name: Authorization
        in: header
        type: string
        required: true
      - in: path
        name: id
        type: string
        required: true
      responses:
        200:
          description: Deleted the ProcessInstanceGroup successfully
        401:
          description: Invalid token. No user was found for the provided token
        404:
          description: There does not exist a process instance group with the given id
definitions:

  Version:
    title: Version Object
    type: object
    properties:
      serviceId:
        type: string
      version:
        type: string

  ProcessPreferences:
    title: Business Process Preferences Object of a partner for all other partners
    type: object
    properties:
      partnerID:
        type: string
      preferences:
        type: array
        items:
          $ref: '#/definitions/ProcessPreference'

  ProcessPreference:
    title: Business Process Preference Object for a specific case (e.g. default or for a partner)
    type: object
    properties:
      targetPartnerID:
        type: string
        description: The value is DEFAULT or the partner ID for whom this preference is specified
      processOrder:
        type: array
        items:
          type: string
          enum:
          - CATALOGUE
          - NEGOTIATION
          - ORDER
          - REMITTANCEADVICE
          - INVOICE
          - TRACKING
          - FULFILMENT
          - TRANSPORT_EXECUTION_PLAN
          - ITEM_INFORMATION_REQUEST
          - PRODUCTCONFIGURATION
          - PPAP
          - OTHER


  Transaction:
    title: The transaction in a business process
    type: object
    properties:
      transactionID:
        type: string
      initiatorRole:
        type: string
        enum:
        - BUYER
        - SELLER
        - LOGISTICSPROVIDER
      responderRole:
        type: string
        enum:
        - BUYER
        - SELLER
        - LOGISTICSPROVIDER
      documentType:
        type: string
        enum:
        - CATALOGUE
        - REQUESTFORQUOTATION
        - QUOTATION
        - ORDER
        - ORDERRESPONSESIMPLE
        - REMITTANCEADVICE
        - INVOICE
        - APPLICATIONRESPONSE
        - TRANSPORTATIONSTATUS
        - DESPATCHADVICE
        - RECEIPTADVICE
        - PPAPREQUEST
        - PPAPRESPONSE
        - TRANSPORTEXECUTIONPLANREQUEST
        - TRANSPORTEXECUTIONPLAN
        - ITEMINFORMATIONREQUEST
        - ITEMINFORMATIONRESPONSE
        - OTHER

  Process:
    title: Business Process Object
    type: object
    properties:
      processID:
        type: string
      processName:
        type: string
      processType:
        type: string
        enum:
        - CATALOGUE
        - NEGOTIATION
        - ORDER
        - REMITTANCEADVICE
        - INVOICE
        - TRACKING
        - FULFILMENT
        - PRODUCTCONFIGURATION
        - PPAP
        - TRANSPORT_EXECUTION_PLAN
        - ITEM_INFORMATION_REQUEST
        - OTHER
      textContent:
        type: string
      bpmnContent:
        type: string
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'

  ExecutionConfiguration:
    title: Execution Configuration Object
    type: object
    properties:
      applicationType:
        type: string
        enum:
        - DATAADAPTER
        - DATACHANNEL
        - DATAPROCESSOR
      executionType:
        type: string
        enum:
        - JAVA
        - MICROSERVICE
        - OTHER
      executionUri:
        type: string

  TransactionConfiguration:
    title: Application Configuration Object for each activity in a business process
    type: object
    properties:
      transactionID:
        type: string
        description: The transaction where the activity exist
      executionConfigurations:
        type: array
        items:
          $ref: '#/definitions/ExecutionConfiguration'

  ProcessConfiguration:
    title: Applications in Business Process Configuration Object
    type: object
    properties:
      partnerID:
        type: string
      roleType:
        type: string
        enum:
        - BUYER
        - SELLER
        - LOGISTICSPROVIDER        
      processID:
        type: string
      transactionConfigurations:
        type: array
        items:
          $ref: '#/definitions/TransactionConfiguration'

  ProcessVariables:
    title: Business Process Variables Object
    type: object
    properties:
      processID:
        type: string
      initiatorID:
        type: string
      responderID:
        type: string
      contentUUID:
        type: string
        description: The UUID of the document in the content variable
      relatedProducts:
        type: array
        items:
          type: string
      relatedProductCategories:
        type: array
        items:
          type: string
      content:
        type: string
      creatorUserID:
        type: string

  ProcessInstanceInputMessage:
    title: Business Process Input Message Object
    type: object
    properties:
      variables:
        $ref: '#/definitions/ProcessVariables'
      processInstanceID:
        type: string

  ProcessInstance:
    title: Business Process Instance
    type: object
    properties:
      processInstanceID:
        type: string
      creationDate:
        type: string
      processID:
        type: string
      status:
        type: string
        enum:
        - STARTED
        - CANCELLED
        - COMPLETED

  ProcessInstanceGroup:
    title: Process Instance Group Object
    type: object
    properties:
      ID:
        type: string
      name:
        type: string
      partyID:
        type: string
      processInstanceIDs:
        type: array
        items:
          type: string
      archived:
        type: boolean
      collaborationRole:
        type: string
      associatedGroups:
        type: array
        items:
          type: string
      firstActivityTime:
        type: string
      lastActivityTime:
        type: string
      precedingProcessInstanceGroup:
        $ref: '#/definitions/ProcessInstanceGroup'
      precedingProcess:
        $ref: '#/definitions/ProcessInstance'
      status:
        type: string
        enum:
        - INPROGRESS
        - CANCELLED

  CollaborationGroup:
    title: Collaboration Group
    type: object
    properties:
      ID:
        type: string
      name:
        type: string
      archived:
        type: boolean
      isArchiveable:
        type: boolean
      status:
        type: string
        enum:
        - INPROGRESS
      isProject:
        type: boolean
      associatedCollaborationGroups:
        type: array
        items:
          type: integer
      associatedProcessInstanceGroups:
        type: array
        items:
          $ref: '#/definitions/ProcessInstanceGroup'

  CollaborationGroupResponse:
    title: Process Instance Group Response
    type: object

  ProcessInstanceGroupFilter:
    title: Process Instance Group Filters
    description: Contains the filtering criteria for Process Instance Group objects
    type: object
    properties:
      startDate:
        type: string
      endDate:
        type: string
      tradingPartnerIDs:
        type: array
        items:
          type: string
      tradingPartnerNames:
        type: array
        items:
          type: string
      relatedProducts:
        type: array
        items:
          type: string
      relatedProductCategories:
        type: array
        items:
          type: string
      status:
        type: array
        items:
          type: string
          enum:
          - STARTED
          - CANCELLED
          - COMPLETED

  ProcessDocumentMetadata:
    title: Business Process Document Metadata Object
    type: object
    properties:
      documentID:
        type: string
      submissionDate:
        type: string
      type:
        type: string
        enum:
        - CATALOGUE
        - REQUESTFORQUOTATION
        - QUOTATION
        - ORDER
        - ORDERRESPONSESIMPLE
        - REMITTANCEADVICE
        - INVOICE
        - APPLICATIONRESPONSE
        - TRANSPORTATIONSTATUS
        - DESPATCHADVICE
        - RECEIPTADVICE
        - PPAPREQUEST
        - PPAPRESPONSE
        - TRANSPORTEXECUTIONPLANREQUEST
        - TRANSPORTEXECUTIONPLAN
        - ITEMINFORMATIONREQUEST
        - ITEMINFORMATIONRESPONSE
        - OTHER
      relatedProducts:
        type: array
        items:
          type: string
      relatedProductCategories:
        type: array
        items:
          type: string
      status:
        type: string
        enum:
        - APPROVED
        - WAITINGRESPONSE
        - DENIED
        - PASTDUE
      processInstanceID:
        type: string
      initiatorID:
        type: string
      responderID:
        type: string
      creatorUserID:
        type: string

  ApiResponse:
    type: object
    properties:
      code:
        type: integer
      type:
        type: string
      message:
        type: string
